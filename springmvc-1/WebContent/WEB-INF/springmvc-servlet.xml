<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 配置自定义扫描的包  -->
	<context:component-scan base-package="com.yws"></context:component-scan>
	
	<!-- 配置视图解析器：如何把handler方法返回值解析为实际的物理视图 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 配置视图  BeanNameViewResolver 解析器：使用视图的名字来解析视图-->
	<!-- 通过order属性来定义视图解析器的优先级，order值越小优先级越高（InternalResourceViewResolver order是默认最大值） -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="100"></property>
	</bean>
	
	
	<!-- 配置国际化资源文件  -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="i18n"></property>
	</bean>
	
	<!-- 配置直接转发的页面 -->
	<mvc:view-controller path="/success" view-name="success"/>
	<!-- <mvc:view-controller path="/i18n" view-name="i18n"/> -->
	<mvc:view-controller path="/i18n2" view-name="i18n2"/>
	
	<!-- 在实际开发中通常都需要配置mvc:annotation-driven标签 -->
	<mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>
	<!-- <mvc:annotation-driven></mvc:annotation-driven> -->
	
	<!-- 
		default-servlet-handler将在SpringMVC上下文定义一个DefaultServletHttpRequestHandler，
		它会对进入DispatcherServlet的请求进行筛查，如果是发现没有经过映射的请求，就将该请求交由Web应用服务器默认的Servlet处理。
		如果不是静态资源的请求，才由DispatcherServlet继续处理
		
		一般WEB应用服务器默认的Servlet的名称都是default。
		若所使用的WEB应用服务器的默认Servlet名称不是default，则需要通过default-servlet-name 属性显示指定
	 -->	
	<mvc:default-servlet-handler />
	
	<!-- 配置ConversionService -->
	<!-- <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean"> -->
	<!-- FormattingConversionServiceFactoryBean 既可以用自定义类型转换，又可以用自带的格式转换、校验 -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"> 
		<property name="converters">
			<set>
				<ref bean="employeeConverter"/>
			</set>
		</property>
	</bean>
	
	
	<!-- 配置SessionLocaleResolver -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>
	
	<mvc:interceptors>
		<!-- 配置自定义拦截器 -->
		<bean class="com.yws.interceptor.FirstInterceptor"></bean>
		
		<!-- 配置拦截器（不）作用的路径 -->
		<mvc:interceptor>
			<mvc:mapping path="/emps"/>
			<bean class="com.yws.interceptor.SecondInterceptor"></bean>
		</mvc:interceptor>
		
		<!-- 配置LocaleChangeInterceptor -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"></bean>
	</mvc:interceptors>
	
	<!-- 配置MultipartResolver  -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="maxUploadSize" value="1024000"></property>
	</bean>
	
	<!-- 配置使用SimpleMappingExceptionResolver 来映射异常 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!-- <property name="exceptionAttribute">ex</property> -->
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.ArrayIndexOutOfBoundsException">error</prop>
			</props>
		</property>
	</bean>
</beans>
